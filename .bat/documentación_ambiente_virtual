üöÄ Script de inicializaci√≥n de proyecto Python con Jupyter

Este proyecto incluye un archivo batch (.bat) que automatiza la creaci√≥n de un entorno de trabajo en Python con soporte para Jupyter Notebooks y Visual Studio Code.

üìÇ Estructura generada

Al ejecutar el .bat se crea la siguiente estructura:

üìÅ nombre_del_bat/
 ‚îú‚îÄ‚îÄ üìÅ src/
 ‚îÇ    ‚îî‚îÄ‚îÄ mis_funciones.py
 ‚îú‚îÄ‚îÄ üìÅ notebooks/
 ‚îÇ    ‚îî‚îÄ‚îÄ arrays.ipynb
 ‚îú‚îÄ‚îÄ üìÅ .venv/   (entorno virtual de Python)

‚öôÔ∏è Explicaci√≥n del script paso a paso
1. Ir a la carpeta del .bat
cd /d %~dp0


Navega a la carpeta donde est√° guardado el script.

2. Crear carpeta con el nombre del .bat
md %~n0
cd %~n0


%~n0 ‚Üí nombre del archivo .bat sin extensi√≥n.

Se crea una carpeta con ese nombre y se entra en ella.

3. Crear carpetas de trabajo
md src
md notebooks


src/ ‚Üí c√≥digo Python.

notebooks/ ‚Üí archivos Jupyter.

4. Crear un archivo Python de ejemplo
echo # Archivo de funciones > src\mis_funciones.py
echo def saludar(nombre): >> src\mis_funciones.py
echo     return f"Hola, {nombre}!" >> src\mis_funciones.py


Genera mis_funciones.py con una funci√≥n simple de prueba.

5. Crear un notebook vac√≠o
echo { > notebooks\arrays.ipynb
echo   "cells": [], >> notebooks\arrays.ipynb
echo   "metadata": {}, >> notebooks\arrays.ipynb
echo   "nbformat": 4, >> notebooks\arrays.ipynb
echo   "nbformat_minor": 5 >> notebooks\arrays.ipynb
echo } >> notebooks\arrays.ipynb


Crea un arrays.ipynb v√°lido para que Jupyter/VS Code lo reconozca.

6. Crear y activar un entorno virtual
python -m venv .venv
call .venv\Scripts\activate


Crea un entorno virtual .venv e inicia el entorno.

7. Instalar dependencias
python -m pip install --upgrade pip
python -m pip install jupyter


Actualiza pip e instala Jupyter Notebook en el entorno virtual.

8. Abrir el proyecto en VS Code
code "%cd%"
code "%cd%\notebooks\arrays.ipynb"


Abre la carpeta del proyecto en VS Code.

Abre el notebook arrays.ipynb en otra pesta√±a.
