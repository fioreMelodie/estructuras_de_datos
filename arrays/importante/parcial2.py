# En matriz
matriz = [
    [3, 5, 7],
    [1, 4, 9],
    [2, 6, 8]
]

# TamaÃ±o de la matriz
filas = len(matriz)
columnas = len(matriz[0])
print("Filas:", filas, "Columnas:", columnas)

# Suma de cada fila
for fila in matriz:
    print("Suma fila:", sum(fila))

# Elementos de una columna
columna_1 = [fila[0] for fila in matriz]
print("Columna 1:", columna_1)

# Transpuesta (filas â†” columnas)
transpuesta = list(zip(*matriz))
print("Transpuesta:", transpuesta)

# MÃ¡ximo y mÃ­nimo de la matriz
todos = [elem for fila in matriz for elem in fila]
print("MÃ¡ximo:", max(todos), "MÃ­nimo:", min(todos))


# En cubos
cubo = [
    [[1, 2], [3, 4]],
    [[5, 6], [7, 8]]
]

# Sumar todo el cubo
suma_total = sum(sum(sum(fila) for fila in capa) for capa in cubo)
print("Suma cubo:", suma_total)

# Todos los elementos en una sola lista
todos = [elem for capa in cubo for fila in capa for elem in fila]
print("Todos los elementos:", todos)

print("MÃ¡ximo:", max(todos), "MÃ­nimo:", min(todos))

#ðŸ“Œ Funciones importantes para recordar en el parcial

ðŸ‘‰ Para listas (arrays):

len() â†’ cantidad de elementos

sum() â†’ suma

max(), min() â†’ mayor y menor

.append(x) â†’ agrega al final

.insert(i, x) â†’ inserta en posiciÃ³n

.remove(x) â†’ elimina por valor

.pop(i) â†’ elimina por Ã­ndice (Ãºltimo si no se pone)

.index(x) â†’ busca posiciÃ³n

.count(x) â†’ cuÃ¡ntas veces aparece

.reverse() o [::-1] â†’ invierte

.sort() o sorted(lista) â†’ ordena

ðŸ‘‰ Para matrices y cubos:

len(matriz) â†’ nÃºmero de filas

len(matriz[0]) â†’ nÃºmero de columnas

zip(*matriz) â†’ transpuesta

Recorrer con for anidados

List comprehension para "aplanar" estructuras

Aplicar sum(), max(), min() sobre todas las filas o capas
